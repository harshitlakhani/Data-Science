initial commit
file contains modules common various models import torch functional utils utils import def conv dwconv act true depthwise convolution return conv math gcd act act class conv module standard convolution def init self act true chin chout kernel stride groups super conv self init self conv convd groups bias false self batch normd batchnormd self act leaky leakyrelu inplace true act else identity def forward self return self act self self conv class bottleneck module def init self shortcut true chin chout shortcut groups expansion super bottleneck self init int hidden channels self conv self conv self add shortcut def forward self return self self self add else self self class bottleneck light bottlenecklight module def init self shortcut true chin chout shortcut groups expansion super bottleneck light bottlenecklight self init int hidden channels self conv self convd groups bias false self batch normd batchnormd self act leaky leakyrelu inplace true self add shortcut def forward self return self act self self self self add else self self class bottleneck csp bottleneckcsp module def init self shortcut true chin chout number shortcut groups expansion super bottleneck csp bottleneckcsp self init int hidden channels self conv self convd bias false self convd bias false self conv self batch normd batchnormd applied cat self act leaky leakyrelu inplace true self sequential bottleneck shortcut range def forward self self self self self return self self act self torch cat dim class bottleneck cspf bottleneckcspf module def init self shortcut false chin chout number shortcut groups expansion super bottleneck cspf bottleneckcspf self init int hidden channels self conv self convd bias false self convd bias false self conv self batch normd batchnormd applied cat self act leaky leakyrelu inplace true self sequential bottleneck shortcut range def forward self self self self self return self self act self torch cat dim class narrow module def init self shortcut true chin chout shortcut groups super narrow self init hidden channels self conv self conv self add shortcut def forward self return self self self add else self self class origami module side layering def forward self pad return torch cat class conv plus convplus module standard convolution def init self bias true chin chout kernel stride groups super conv plus convplus self init self convd groups bias bias self convd groups bias bias def forward self return self self class spp module spatial pyramid pooling layer used yol spp yolovspp def init self super spp self init hidden channels self conv self conv len self module list modulelist max poold maxpoold kernel size kernelsize stride padding def forward self self return self torch cat self class flatten module use adaptive avg poold adaptiveavgpoold remove last dimensions def forward self return view size class focus module focus information space cspace def init self super focus self init self conv conv def forward self return self conv torch cat class concat module concatenate list tensors along dimension def init self dimension super concat self init self dimension def forward self return torch cat self class mix convd mixconvd module mixed depthwise conv https arxiv org abs def init self equal equalch true super mix convd mixconvd self init groups len equal equalch equal per group torch linspace groups floor indices sum range groups intermediate channels else equal weight numel per group groups eye groups groups roll axis array linalg lstsq rcond none round solve equal weight indices self module list modulelist convd int bias false range groups self batch normd batchnormd self act leaky leakyrelu inplace true def forward self return self act self torch cat self
