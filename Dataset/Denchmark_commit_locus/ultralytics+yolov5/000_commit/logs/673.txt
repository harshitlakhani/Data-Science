      Single-source training (#680)          * Single-source training          * Extract hyperparameters into seperate files          * weight decay scientific notation yaml reader bug fix          * remove import glob          * intersect_dicts() implementation          * 'or' bug fix          * .to(device) bug fix 
     labels_to_image_weights, compute_loss, plot_images, fitness, strip_optimizer, plot_results,      get_latest_run, check_git_status, check_file, increment_dir, print_mutation, plot_evolution)  from utils.google_utils import attempt_download from utils.torch_utils import init_seeds, ModelEMA, select_device  # Hyperparameters hyp = {'lr0': 0.01,  # initial learning rate (SGD=1E-2, Adam=1E-3)        'momentum': 0.937,  # SGD momentum/Adam beta1        'weight_decay': 5e-4,  # optimizer weight decay        'giou': 0.05,  # GIoU loss gain        'cls': 0.5,  # cls loss gain        'cls_pw': 1.0,  # cls BCELoss positive_weight        'obj': 1.0,  # obj loss gain (scale with pixels)        'obj_pw': 1.0,  # obj BCELoss positive_weight        'iou_t': 0.20,  # IoU training threshold        'anchor_t': 4.0,  # anchor-multiple threshold        'fl_gamma': 0.0,  # focal loss gamma (efficientDet default gamma=1.5)        'hsv_h': 0.015,  # image HSV-Hue augmentation (fraction)        'hsv_s': 0.7,  # image HSV-Saturation augmentation (fraction)        'hsv_v': 0.4,  # image HSV-Value augmentation (fraction)        'degrees': 0.0,  # image rotation (+/- deg)        'translate': 0.5,  # image translation (+/- fraction)        'scale': 0.5,  # image scale (+/- gain)        'shear': 0.0,  # image shear (+/- deg)        'perspective': 0.0,  # image perspective (+/- fraction), range 0-0.001        'flipud': 0.0,  # image flip up-down (probability)        'fliplr': 0.5,  # image flip left-right (probability)        'mixup': 0.0}  # image mixup (probability) from utils.torch_utils import init_seeds, ModelEMA, select_device, intersect_dicts      def train(hyp, opt, device, tb_writer=None): 
