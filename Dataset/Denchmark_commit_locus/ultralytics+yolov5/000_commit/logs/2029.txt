      Add `device` argument to PyTorch Hub models (#3104)          * Allow to manual selection of device for torchhub models          * single line device          nested torch.device(torch.device(device)) ok          Co-authored-by: Glenn Jocher <glenn.jocher@ultralytics.com> 
         raise Exception(s) from e     def custom(path='path/to/model.pt', autoshape=True, verbose=True): def custom(path='path/to/model.pt', autoshape=True, verbose=True, device=None):      # YOLOv5 custom or local model     return _create(path, autoshape=autoshape, verbose=verbose)     return _create(path, autoshape=autoshape, verbose=verbose, device=device)     def yolov5s(pretrained=True, channels=3, classes=80, autoshape=True, verbose=True): def yolov5s(pretrained=True, channels=3, classes=80, autoshape=True, verbose=True, device=None):      # YOLOv5-small model https://github.com/ultralytics/yolov5     return _create('yolov5s', pretrained, channels, classes, autoshape, verbose)     return _create('yolov5s', pretrained, channels, classes, autoshape, verbose, device)     def yolov5m(pretrained=True, channels=3, classes=80, autoshape=True, verbose=True): def yolov5m(pretrained=True, channels=3, classes=80, autoshape=True, verbose=True, device=None):      # YOLOv5-medium model https://github.com/ultralytics/yolov5     return _create('yolov5m', pretrained, channels, classes, autoshape, verbose)     return _create('yolov5m', pretrained, channels, classes, autoshape, verbose, device)     def yolov5l(pretrained=True, channels=3, classes=80, autoshape=True, verbose=True): def yolov5l(pretrained=True, channels=3, classes=80, autoshape=True, verbose=True, device=None):      # YOLOv5-large model https://github.com/ultralytics/yolov5     return _create('yolov5l', pretrained, channels, classes, autoshape, verbose)     return _create('yolov5l', pretrained, channels, classes, autoshape, verbose, device)     def yolov5x(pretrained=True, channels=3, classes=80, autoshape=True, verbose=True): def yolov5x(pretrained=True, channels=3, classes=80, autoshape=True, verbose=True, device=None):      # YOLOv5-xlarge model https://github.com/ultralytics/yolov5     return _create('yolov5x', pretrained, channels, classes, autoshape, verbose)     return _create('yolov5x', pretrained, channels, classes, autoshape, verbose, device)     def yolov5s6(pretrained=True, channels=3, classes=80, autoshape=True, verbose=True): def yolov5s6(pretrained=True, channels=3, classes=80, autoshape=True, verbose=True, device=None):      # YOLOv5-small-P6 model https://github.com/ultralytics/yolov5     return _create('yolov5s6', pretrained, channels, classes, autoshape, verbose)     return _create('yolov5s6', pretrained, channels, classes, autoshape, verbose, device)     def yolov5m6(pretrained=True, channels=3, classes=80, autoshape=True, verbose=True): def yolov5m6(pretrained=True, channels=3, classes=80, autoshape=True, verbose=True, device=None):      # YOLOv5-medium-P6 model https://github.com/ultralytics/yolov5     return _create('yolov5m6', pretrained, channels, classes, autoshape, verbose)     return _create('yolov5m6', pretrained, channels, classes, autoshape, verbose, device)     def yolov5l6(pretrained=True, channels=3, classes=80, autoshape=True, verbose=True): def yolov5l6(pretrained=True, channels=3, classes=80, autoshape=True, verbose=True, device=None):      # YOLOv5-large-P6 model https://github.com/ultralytics/yolov5     return _create('yolov5l6', pretrained, channels, classes, autoshape, verbose)     return _create('yolov5l6', pretrained, channels, classes, autoshape, verbose, device)     def yolov5x6(pretrained=True, channels=3, classes=80, autoshape=True, verbose=True): def yolov5x6(pretrained=True, channels=3, classes=80, autoshape=True, verbose=True, device=None):      # YOLOv5-xlarge-P6 model https://github.com/ultralytics/yolov5     return _create('yolov5x6', pretrained, channels, classes, autoshape, verbose)     return _create('yolov5x6', pretrained, channels, classes, autoshape, verbose, device)      if __name__ == '__main__': 
