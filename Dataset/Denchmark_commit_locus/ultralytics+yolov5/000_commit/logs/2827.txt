      Precision-Recall Curve feature update (#1206)          * Precision-Recall Curve feature update          * sentinel value update 
             p[ci] = np.interp(-pr_score, -conf[i], precision[:, 0])  # p at pr_score                # AP from recall-precision curve             py.append(np.interp(px, recall[:, 0], precision[:, 0]))  # precision at mAP@0.5              for j in range(tp.shape[1]):                 ap[ci, j] = compute_ap(recall[:, j], precision[:, j])                 ap[ci, j], mpre, mrec = compute_ap(recall[:, j], precision[:, j])                 if j == 0:                     py.append(np.interp(px, mrec, mpre))  # precision at mAP@0.5        # Compute F1 score (harmonic mean of precision and recall)      f1 = 2 * p * r / (p + r + 1e-16) 
