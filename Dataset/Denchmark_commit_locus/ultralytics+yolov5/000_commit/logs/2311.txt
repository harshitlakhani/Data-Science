      Unified '/project/name' results saving (#1377)          * Project/name update          * Update ci-testing.yml          * address project with path separator failure mode          * Project/name update          * address project with path separator failure mode          * Update ci-testing.yml          * detect.py default --name bug fix          * missing rstrip PR          * train/exp0 to train/exp 
 from models.experimental import attempt_load  from utils.datasets import LoadStreams, LoadImages  from utils.general import check_img_size, non_max_suppression, apply_classifier, scale_coords, xyxy2xywh, \     plot_one_box, strip_optimizer, set_logging, increment_dir     plot_one_box, strip_optimizer, set_logging, increment_path  from utils.torch_utils import select_device, load_classifier, time_synchronized      def detect(save_img=False):     save_dir, source, weights, view_img, save_txt, imgsz = \         Path(opt.save_dir), opt.source, opt.weights, opt.view_img, opt.save_txt, opt.img_size     source, weights, view_img, save_txt, imgsz = opt.source, opt.weights, opt.view_img, opt.save_txt, opt.img_size      webcam = source.isnumeric() or source.endswith('.txt') or \               source.lower().startswith(('rtsp://', 'rtmp://', 'http://'))        # Directories     if save_dir == Path('runs/detect'):  # if default         save_dir.mkdir(parents=True, exist_ok=True)  # make base         save_dir = Path(increment_dir(save_dir / 'exp', opt.name))  # increment run     (save_dir / 'labels' if save_txt else save_dir).mkdir(parents=True, exist_ok=True)  # make new dir     save_dir = Path(increment_path(Path(opt.project) / opt.name, exist_ok=opt.exist_ok))  # increment run     (save_dir / 'labels' if save_txt else save_dir).mkdir(parents=True, exist_ok=True)  # make dir        # Initialize      set_logging() 
