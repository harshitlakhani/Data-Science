      update datasets.py LoadImages() path improvements and Mixup 
   class LoadImages:  # for inference      def __init__(self, path, img_size=640):         path = str(Path(path))  # os-agnostic         files = []         if os.path.isdir(path):             files = sorted(glob.glob(os.path.join(path, '*.*')))         elif os.path.isfile(path):             files = [path]         p = str(Path(path))  # os-agnostic         p = os.path.abspath(p)  # absolute path         if os.path.isdir(p):             files = sorted(glob.glob(os.path.join(p, '*.*')))         elif os.path.isfile(p):             files = [p]         else:             raise Exception('ERROR: %s does not exist' % p)            images = [x for x in files if os.path.splitext(x)[-1].lower() in img_formats]          videos = [x for x in files if os.path.splitext(x)[-1].lower() in vid_formats]         nI, nV = len(images), len(videos)         ni, nv = len(images), len(videos)            self.img_size = img_size          self.files = images + videos         self.nF = nI + nV  # number of files         self.video_flag = [False] * nI + [True] * nV         self.nf = ni + nv  # number of files         self.video_flag = [False] * ni + [True] * nv          self.mode = 'images'          if any(videos):              self.new_video(videos[0])  # new video          else:              self.cap = None         assert self.nF > 0, 'No images or videos found in %s. Supported formats are:\nimages: %s\nvideos: %s' % \                             (path, img_formats, vid_formats)         assert self.nf > 0, 'No images or videos found in %s. Supported formats are:\nimages: %s\nvideos: %s' % \                             (p, img_formats, vid_formats)        def __iter__(self):          self.count = 0          return self        def __next__(self):         if self.count == self.nF:         if self.count == self.nf:              raise StopIteration          path = self.files[self.count]   
