      GPU export options (#2297)          * option for skip last layer and cuda export support          * added parameter device          * fix import          * cleanup 1          * cleanup 2          * opt-in grid          --grid will export with grid computation, default export will skip grid (same as current)          * default --device cpu          GPU export causes ONNX and CoreML errors.          Co-authored-by: Jan Hajek <jan.hajek@gmail.com>     Co-authored-by: Glenn Jocher <glenn.jocher@ultralytics.com> 
 from models.experimental import attempt_load  from utils.activations import Hardswish, SiLU  from utils.general import set_logging, check_img_size from utils.torch_utils import select_device    if __name__ == '__main__':      parser = argparse.ArgumentParser()      parser.add_argument('--weights', type=str, default='./yolov5s.pt', help='weights path')  # from yolov5/models/      parser.add_argument('--img-size', nargs='+', type=int, default=[640, 640], help='image size')  # height, width     parser.add_argument('--dynamic', action='store_true', help='dynamic ONNX axes')      parser.add_argument('--batch-size', type=int, default=1, help='batch size')     parser.add_argument('--dynamic', action='store_true', help='dynamic ONNX axes')     parser.add_argument('--grid', action='store_true', help='export Detect() layer grid')     parser.add_argument('--device', default='cpu', help='cuda device, i.e. 0 or 0,1,2,3 or cpu')      opt = parser.parse_args()      opt.img_size *= 2 if len(opt.img_size) == 1 else 1  # expand      print(opt) 
