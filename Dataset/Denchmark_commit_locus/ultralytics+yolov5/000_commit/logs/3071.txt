      Update DDP for `torch.distributed.run` with `gloo` backend (#3680)          * Update DDP for `torch.distributed.run`          * Add LOCAL_RANK          * remove opt.local_rank          * backend="gloo|nccl"          * print          * print          * debug          * debug          * os.getenv          * gloo          * gloo          * gloo          * cleanup          * fix getenv          * cleanup          * cleanup destroy          * try nccl          * return opt          * add --local_rank          * add timeout          * add init_method          * gloo          * move destroy          * move destroy          * move print(opt) under if RANK          * destroy only RANK 0          * move destroy inside train()          * restore destroy outside train()          * update print(opt)          * cleanup          * nccl          * gloo with 60 second timeout          * update namespace printing 
             with amp.autocast(enabled=cuda):                  pred = model(imgs)  # forward                  loss, loss_items = compute_loss(pred, targets.to(device))  # loss scaled by batch_size                 if rank != -1:                     loss *= opt.world_size  # gradient averaged between devices in DDP mode                 if RANK != -1:                     loss *= WORLD_SIZE  # gradient averaged between devices in DDP mode                  if opt.quad:                      loss *= 4.   
