      Improved corruption handling during scan and cache (#999) 
                     raise Exception('%s does not exist' % p)              self.img_files = sorted(                  [x.replace('/', os.sep) for x in f if os.path.splitext(x)[-1].lower() in img_formats])             assert len(self.img_files) > 0, 'No images found'          except Exception as e:              raise Exception('Error loading data from %s: %s\nSee %s' % (path, e, help_url))           n = len(self.img_files)         assert n > 0, 'No images found in %s. See %s' % (path, help_url)         bi = np.floor(np.arange(n) / batch_size).astype(np.int)  # batch index         nb = bi[-1] + 1  # number of batches          self.n = n  # number of images         self.batch = bi  # batch index of image         self.img_size = img_size         self.augment = augment         self.hyp = hyp         self.image_weights = image_weights         self.rect = False if image_weights else rect         self.mosaic = self.augment and not self.rect  # load 4 images at a time into a mosaic (only during training)         self.mosaic_border = [-img_size // 2, -img_size // 2]         self.stride = stride           # Check cache          self.label_files = img2label_paths(self.img_files)  # labels          cache_path = str(Path(self.label_files[0]).parent) + '.cache'  # cached labels 
