      update mosaic border 
             image_weights = labels_to_image_weights(dataset.labels, nc=nc, class_weights=w)              dataset.indices = random.choices(range(dataset.n), weights=image_weights, k=dataset.n)  # rand weighted idx           # Update mosaic border         # b = int(random.uniform(0.25 * imgsz, 0.75 * imgsz + gs) // gs * gs)         # dataset.mosaic_border = [b - imgsz, -b]  # height, width borders           mloss = torch.zeros(4, device=device)  # mean losses          print(('\n' + '%10s' * 8) % ('Epoch', 'gpu_mem', 'GIoU', 'obj', 'cls', 'total', 'targets', 'img_size'))          pbar = tqdm(enumerate(dataloader), total=nb)  # progress bar 
