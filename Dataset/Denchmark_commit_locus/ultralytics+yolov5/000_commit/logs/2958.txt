      Cache v0.3: improved corrupt image/label reporting (#3676)          * Cache v0.3: improved corrupt image/label reporting          Fix for https://github.com/ultralytics/yolov5/issues/3656#issuecomment-863660899          * cleanup 
     def cache_labels(self, path=Path('./labels.cache'), prefix=''):          # Cache dataset labels, check images and read shapes          x = {}  # dict         nm, nf, ne, nc = 0, 0, 0, 0  # number missing, found, empty, corrupt         nm, nf, ne, nc, msgs = 0, 0, 0, 0, []  # number missing, found, empty, corrupt, messages          desc = f"{prefix}Scanning '{path.parent / path.stem}' images and labels..."          with Pool(num_threads) as pool:              pbar = tqdm(pool.imap_unordered(verify_image_label, zip(self.img_files, self.label_files, repeat(prefix))),                          desc=desc, total=len(self.img_files))             for im_file, l, shape, segments, nm_f, nf_f, ne_f, nc_f in pbar:             for im_file, l, shape, segments, nm_f, nf_f, ne_f, nc_f, msg in pbar:                  nm += nm_f                  nf += nf_f                  ne += ne_f                  nc += nc_f                  if im_file:                      x[im_file] = [l, shape, segments]                 if msg:                     msgs.append(msg)                  pbar.desc = f"{desc}{nf} found, {nm} missing, {ne} empty, {nc} corrupted"            pbar.close()         if msgs:             logging.info('\n'.join(msgs))          if nf == 0:              logging.info(f'{prefix}WARNING: No labels found in {path}. See {help_url}')          x['hash'] = get_hash(self.label_files + self.img_files)          x['results'] = nf, nm, ne, nc, len(self.img_files)         x['version'] = 0.2  # cache version         x['msgs'] = msgs  # warnings         x['version'] = 0.3  # cache version          try:              torch.save(x, path)  # save cache for next time              logging.info(f'{prefix}New cache created: {path}') 
