      Mode all optimizer settings to 'hyp.yaml', integrate proper momentum with Adam optimizer 
             else:                  pg0.append(v)  # all else       optimizer = optim.Adam(pg0, lr=hyp['lr0']) if opt.adam else \         optim.SGD(pg0, lr=hyp['lr0'], momentum=hyp['momentum'], nesterov=True)     if hyp.optimizer =='adam':         optimizer = optim.Adam(pg0, lr=hyp['lr0'], betas=(hyp['momentum'], 0.999)) #use default beta2, adjust beta1 for Adam momentum per momentum adjustments in https://pytorch.org/docs/stable/_modules/torch/optim/lr_scheduler.html#OneCycleLR     else:         optimizer = optim.SGD(pg0, lr=hyp['lr0'], momentum=hyp['momentum'], nesterov=True)       optimizer.add_param_group({'params': pg1, 'weight_decay': hyp['weight_decay']})  # add pg1 with weight_decay      optimizer.add_param_group({'params': pg2})  # add pg2 (biases)      print('Optimizer groups: %g .bias, %g conv.weight, %g other' % (len(pg2), len(pg1), len(pg0))) 
