      Simplified inference (#1153) 
         self.info()          return self       def add_nms(self):  # fuse model Conv2d() + BatchNorm2d() layers         if type(self.model[-1]) is not NMS:  # if missing NMS             print('Adding NMS module... ')     def nms(self, mode=True):  # add or remove NMS module         present = type(self.model[-1]) is NMS  # last layer is NMS         if mode and not present:             print('Adding NMS... ')              m = NMS()  # module              m.f = -1  # from              m.i = self.model[-1].i + 1  # index              self.model.add_module(name='%s' % m.i, module=m)  # add             self.eval()         elif not mode and present:             print('Removing NMS... ')             self.model = self.model[:-1]  # remove          return self       def autoshape(self):  # add autoShape module         print('Adding autoShape... ')         m = autoShape(self)  # wrap model         copy_attr(m, self, include=('yaml', 'nc', 'hyp', 'names', 'stride'), exclude=())  # copy attributes         return m       def info(self, verbose=False):  # print model information          model_info(self, verbose)   
