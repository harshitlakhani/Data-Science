      LoadImages() pathlib update (#2140) 
         self.mosaic_border = [-img_size // 2, -img_size // 2]          self.stride = stride          self.path = path                    try:              f = []  # image files              for p in path if isinstance(path, list) else [path]:                  p = Path(p)  # os-agnostic                  if p.is_dir():  # dir                      f += glob.glob(str(p / '**' / '*.*'), recursive=True)                     # f = list(p.rglob('**/*.*'))  # pathlib                  elif p.is_file():  # file                      with open(p, 'r') as t:                          t = t.read().strip().splitlines()                          parent = str(p.parent) + os.sep                          f += [x.replace('./', parent) if x.startswith('./') else x for x in t]  # local to global path                         # f += [p.parent / x.lstrip(os.sep) for x in t]  # local to global path (pathlib)                  else:                      raise Exception(f'{prefix}{p} does not exist')              self.img_files = sorted([x.replace('/', os.sep) for x in f if x.split('.')[-1].lower() in img_formats])             # self.img_files = sorted([x for x in f if x.suffix[1:].lower() in img_formats])  # pathlib              assert self.img_files, f'{prefix}No images found'          except Exception as e:              raise Exception(f'{prefix}Error loading data from {path}: {e}\nSee {help_url}') 
