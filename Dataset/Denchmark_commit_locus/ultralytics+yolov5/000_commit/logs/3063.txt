      Update DDP for `torch.distributed.run` with `gloo` backend (#3680)          * Update DDP for `torch.distributed.run`          * Add LOCAL_RANK          * remove opt.local_rank          * backend="gloo|nccl"          * print          * print          * debug          * debug          * os.getenv          * gloo          * gloo          * gloo          * cleanup          * fix getenv          * cleanup          * cleanup destroy          * try nccl          * return opt          * add --local_rank          * add timeout          * add init_method          * gloo          * move destroy          * move destroy          * move print(opt) under if RANK          * destroy only RANK 0          * move destroy inside train()          * restore destroy outside train()          * update print(opt)          * cleanup          * nccl          * gloo with 60 second timeout          * update namespace printing 
     # Configure      plots = not opt.evolve  # create plots      cuda = device.type != 'cpu'     init_seeds(2 + rank)     init_seeds(2 + RANK)      with open(opt.data) as f:          data_dict = yaml.safe_load(f)  # data dict        # Loggers      loggers = {'wandb': None, 'tb': None}  # loggers dict     if rank in [-1, 0]:     if RANK in [-1, 0]:          # TensorBoard          if not opt.evolve:              prefix = colorstr('tensorboard: ') 
