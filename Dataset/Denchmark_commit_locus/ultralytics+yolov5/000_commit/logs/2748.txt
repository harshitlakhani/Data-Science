      Improved W&B integration  (#2125)          * Init Commit          * new wandb integration          * Update          * Use data_dict in test          * Updates          * Update: scope of log_img          * Update: scope of log_img          * Update          * Update: Fix logging conditions          * Add tqdm bar, support for .txt dataset format          * Improve Result table Logger          * Init Commit          * new wandb integration          * Update          * Use data_dict in test          * Updates          * Update: scope of log_img          * Update: scope of log_img          * Update          * Update: Fix logging conditions          * Add tqdm bar, support for .txt dataset format          * Improve Result table Logger          * Add dataset creation in training script          * Change scope: self.wandb_run          * Add wandb-artifact:// natively          you can now use --resume with wandb run links          * Add suuport for logging dataset while training          * Cleanup          * Fix: Merge conflict          * Fix: CI tests          * Automatically use wandb config          * Fix: Resume          * Fix: CI          * Enhance: Using val_table          * More resume enhancement          * FIX : CI          * Add alias          * Get useful opt config data          * train.py cleanup          * Cleanup train.py          * more cleanup          * Cleanup| CI fix          * Reformat using PEP8          * FIX:CI          * rebase          * remove uneccesary changes          * remove uneccesary changes          * remove uneccesary changes          * remove unecessary chage from test.py          * FIX: resume from local checkpoint          * FIX:resume          * FIX:resume          * Reformat          * Performance improvement          * Fix local resume          * Fix local resume          * FIX:CI          * Fix: CI          * Imporve image logging          * (:(:Redo CI tests:):)          * Remember epochs when resuming          * Remember epochs when resuming          * Update DDP location          Potential fix for #2405          * PEP8 reformat          * 0.25 confidence threshold          * reset train.py plots syntax to previous          * reset epochs completed syntax to previous          * reset space to previous          * remove brackets          * reset comment to previous          * Update: is_coco check, remove unused code          * Remove redundant print statement          * Remove wandb imports          * remove dsviz logger from test.py          * Remove redundant change from test.py          * remove redundant changes from train.py          * reformat and improvements          * Fix typo          * Add tqdm tqdm progress when scanning files, naming improvements          Co-authored-by: Glenn Jocher <glenn.jocher@ultralytics.com> 
 def create_dataset_artifact(opt):      with open(opt.data) as f:          data = yaml.load(f, Loader=yaml.SafeLoader)  # data dict     logger = WandbLogger(opt, '', None, data, job_type='create_dataset')     nc, names = (1, ['item']) if opt.single_cls else (int(data['nc']), data['names'])     names = {k: v for k, v in enumerate(names)}  # to index dictionary     logger.log_dataset_artifact(LoadImagesAndLabels(data['train']), names, name='train')  # trainset     logger.log_dataset_artifact(LoadImagesAndLabels(data['val']), names, name='val')  # valset      # Update data.yaml with artifact links     data['train'] = WANDB_ARTIFACT_PREFIX + str(Path(opt.project) / 'train')     data['val'] = WANDB_ARTIFACT_PREFIX + str(Path(opt.project) / 'val')     path = opt.data if opt.overwrite_config else opt.data.replace('.', '_wandb.')  # updated data.yaml path     data.pop('download', None)  # download via artifact instead of predefined field 'download:'     with open(path, 'w') as f:         yaml.dump(data, f)     print("New Config file => ", path)     logger = WandbLogger(opt, '', None, data, job_type='Dataset Creation')      if __name__ == '__main__': 
