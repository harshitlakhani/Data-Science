      updates 
         c = x[:, 5] * 0 if agnostic else x[:, 5]  # classes          boxes, scores = x[:, :4].clone() + c.view(-1, 1) * max_wh, x[:, 4]  # boxes (offset by class), scores          i = torchvision.ops.boxes.nms(boxes, scores, iou_thres)         if i.shape[0] > max_det:  # limit detections             i = i[:max_det]          if merge and (1 < n < 3E3):  # Merge NMS (boxes merged using weighted mean)              try:  # update boxes as boxes(i,4) = weights(i,n) * boxes(n,4)                  iou = box_iou(boxes[i], boxes) > iou_thres  # iou matrix 
