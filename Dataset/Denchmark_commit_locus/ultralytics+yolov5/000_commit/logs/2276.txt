      Add verbose option to pytorch hub models (#2926)          * Add verbose and update print to logging          * Fix positonal param          * Revert auto formatting changes          * Update hubconf.py          Co-authored-by: Glenn Jocher <glenn.jocher@ultralytics.com> 
         m = self.model[-1]  # Detect() module          for mi in m.m:  # from              b = mi.bias.detach().view(m.na, -1).T  # conv.bias(255) to (3,85)             print(('%6g Conv2d.bias:' + '%10.3g' * 6) % (mi.weight.shape[1], *b[:5].mean(1).tolist(), b[5:].mean()))             logger.info(('%6g Conv2d.bias:' + '%10.3g' * 6) % (mi.weight.shape[1], *b[:5].mean(1).tolist(), b[5:].mean()))        # def _print_weights(self):      #     for m in self.model.modules():      #         if type(m) is Bottleneck:     #             print('%10.3g' % (m.w.detach().sigmoid() * 2))  # shortcut weights     #             logger.info('%10.3g' % (m.w.detach().sigmoid() * 2))  # shortcut weights        def fuse(self):  # fuse model Conv2d() + BatchNorm2d() layers         print('Fusing layers... ')         logger.info('Fusing layers... ')          for m in self.model.modules():              if type(m) is Conv and hasattr(m, 'bn'):                  m.conv = fuse_conv_and_bn(m.conv, m.bn)  # update conv 
