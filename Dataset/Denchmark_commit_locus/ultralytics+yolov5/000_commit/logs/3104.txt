      check_anchor_order() update 
     print('\nAnalyzing anchors... ', end='')      m = model.module.model[-1] if hasattr(model, 'module') else model.model[-1]  # Detect()      shapes = imgsz * dataset.shapes / dataset.shapes.max(1, keepdims=True)     wh = torch.tensor(np.concatenate([l[:, 3:5] * s for s, l in zip(shapes, dataset.labels)])).float()  # wh     scale = np.random.uniform(0.9, 1.1, size=(shapes.shape[0], 1))  # augment scale     wh = torch.tensor(np.concatenate([l[:, 3:5] * s for s, l in zip(shapes * scale, dataset.labels)])).float()  # wh        def metric(k):  # compute metric          r = wh[:, None] / k[None] 
