      Update export.py with v3.0 Hardswish() support 
     img = torch.zeros((opt.batch_size, 3, *opt.img_size))  # image size(1,3,320,192) iDetection        # Load PyTorch model     attempt_download(opt.weights)     model = torch.load(opt.weights, map_location=torch.device('cpu'))['model'].float()     model.eval()     model.fuse()     model = attempt_load(opt.weights, map_location=torch.device('cpu'))  # load FP32 model        # Update model     for k, m in model.named_modules():         m._non_persistent_buffers_set = set()  # pytorch 1.6.0 compatability         if isinstance(m, Conv):             m.act = Hardswish()  # assign activation         # if isinstance(m, Detect):         #    m.forward = m.forward_export  # assign forward (optional)      model.model[-1].export = True  # set Detect() layer export=True      y = model(img)  # dry run   
