      ONNX Simplifier (#2815)          * ONNX Simplifier          Add ONNX Simplifier to ONNX export pipeline in export.py. Will auto-install onnx-simplifier if onnx is installed but onnx-simplifier is not.          * Update general.py 
                                         'output': {0: 'batch', 2: 'y', 3: 'x'}} if opt.dynamic else None)            # Checks         onnx_model = onnx.load(f)  # load onnx model         onnx.checker.check_model(onnx_model)  # check onnx model         # print(onnx.helper.printable_graph(onnx_model.graph))  # print a human readable model         print('ONNX export success, saved as %s' % f)         model_onnx = onnx.load(f)  # load onnx model         onnx.checker.check_model(model_onnx)  # check onnx model         # print(onnx.helper.printable_graph(model_onnx.graph))  # print          # Simplify         try:             check_requirements(['onnx-simplifier'])             import onnxsim              print(f'{prefix} simplifying with onnx-simplifier {onnxsim.__version__}...')             model_onnx, check = onnxsim.simplify(model_onnx)             assert check, 'assert check failed'             onnx.save(model_onnx, f)         except Exception as e:             print(f'{prefix} simplifier failure: {e}')         print(f'{prefix} export success, saved as {f}')      except Exception as e:         print('ONNX export failure: %s' % e)         print(f'{prefix} export failure: {e}')        # CoreML export     prefix = colorstr('CoreML:')      try:          import coremltools as ct           print('\nStarting CoreML export with coremltools %s...' % ct.__version__)         print(f'{prefix} starting export with coremltools {onnx.__version__}...')          # convert model from torchscript and apply pixel scaling as per detect.py          model = ct.convert(ts, inputs=[ct.ImageType(name='image', shape=img.shape, scale=1 / 255.0, bias=[0, 0, 0])])          f = opt.weights.replace('.pt', '.mlmodel')  # filename          model.save(f)         print('CoreML export success, saved as %s' % f)         print(f'{prefix} export success, saved as {f}')      except Exception as e:         print('CoreML export failure: %s' % e)         print(f'{prefix} export failure: {e}')        # Finish     print('\nExport complete (%.2fs). Visualize with https://github.com/lutzroeder/netron.' % (time.time() - t))     print(f'\nExport complete ({time.time() - t:.2f}s). Visualize with https://github.com/lutzroeder/netron.') 
