      add NMS to pretrained pytorch hub models 
             state_dict = torch.load(ckpt, map_location=torch.device('cpu'))['model'].float().state_dict()  # to FP32              state_dict = {k: v for k, v in state_dict.items() if model.state_dict()[k].shape == v.shape}  # filter              model.load_state_dict(state_dict, strict=False)  # load              m = NMS()             m.f = -1  # from             m.i = model.model[-1].i + 1  # index             model.model.add_module(name='%s' % m.i, module=m)  # add NMS             model.eval()          return model        except Exception as e: 
