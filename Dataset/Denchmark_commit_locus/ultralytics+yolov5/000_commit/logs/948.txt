      Update datasets.py (#494) 
             print('WARNING: image failure %s' % f)     def convert_images2bmp():  # from utils.datasets import *; convert_images2bmp()     # Save images     formats = [x.lower() for x in img_formats] + [x.upper() for x in img_formats]     # for path in ['../coco/images/val2014', '../coco/images/train2014']:     for path in ['../data/sm4/images', '../data/sm4/background']:         create_folder(path + 'bmp')         for ext in formats:  # ['.bmp', '.jpg', '.jpeg', '.png', '.tif', '.dng']             for f in tqdm(glob.glob('%s/*%s' % (path, ext)), desc='Converting %s' % ext):                 cv2.imwrite(f.replace(ext.lower(), '.bmp').replace(path, path + 'bmp'), cv2.imread(f))      # Save labels     # for path in ['../coco/trainvalno5k.txt', '../coco/5k.txt']:     for file in ['../data/sm4/out_train.txt', '../data/sm4/out_test.txt']:         with open(file, 'r') as f:             lines = f.read()             # lines = f.read().replace('2014/', '2014bmp/')  # coco             lines = lines.replace('/images', '/imagesbmp')             lines = lines.replace('/background', '/backgroundbmp')         for ext in formats:             lines = lines.replace(ext, '.bmp')         with open(file.replace('.txt', 'bmp.txt'), 'w') as f:             f.write(lines)   def recursive_dataset2bmp(dataset='../data/sm4_bmp'):  # from utils.datasets import *; recursive_dataset2bmp() def recursive_dataset2bmp(dataset='path/dataset_bmp'):  # from utils.datasets import *; recursive_dataset2bmp()      # Converts dataset to bmp (for faster training)      formats = [x.lower() for x in img_formats] + [x.upper() for x in img_formats]      for a, b, files in os.walk(dataset): 
