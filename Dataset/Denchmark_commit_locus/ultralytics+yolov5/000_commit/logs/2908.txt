      Merge `develop` branch into `master` (#3518)          * update ci-testing.yml (#3322)          * update ci-testing.yml          * update greetings.yml          * bring back os matrix          * update ci-testing.yml (#3322)          * update ci-testing.yml          * update greetings.yml          * bring back os matrix          * Enable direct `--weights URL` definition (#3373)          * Enable direct `--weights URL` definition          @KalenMike this PR will enable direct --weights URL definition. Example use case:     ```     python train.py --weights https://storage.googleapis.com/bucket/dir/model.pt     ```          * cleanup          * bug fixes          * weights = attempt_download(weights)          * Update experimental.py          * Update hubconf.py          * return bug fix          * comment mirror          * min_bytes          * Update tutorial.ipynb (#3368)          add Open in Kaggle badge          * `cv2.imread(img, -1)` for IMREAD_UNCHANGED (#3379)          * Update datasets.py          * comment          Co-authored-by: Glenn Jocher <glenn.jocher@ultralytics.com>          * COCO evolution fix (#3388)          * COCO evolution fix          * cleanup          * update print          * print fix          * Create `is_pip()` function (#3391)          Returns `True` if file is part of pip package. Useful for contextual behavior modification.          ```python     def is_pip():         # Is file in a pip package?         return 'site-packages' in Path(__file__).absolute().parts     ```          * Revert "`cv2.imread(img, -1)` for IMREAD_UNCHANGED (#3379)" (#3395)          This reverts commit 21a9607e00f1365b21d8c4bd81bdbf5fc0efea24.          * Update FLOPs description (#3422)          * Update README.md          * Changing FLOPS to FLOPs.          Co-authored-by: BuildTools <unconfigured@null.spigotmc.org>          * Parse URL authentication (#3424)          * Parse URL authentication          * urllib.parse.unquote()          * improved error handling          * improved error handling          * remove %3F          * update check_file()          * Add FLOPs title to table (#3453)          * Suppress jit trace warning + graph once (#3454)          * Suppress jit trace warning + graph once          Suppress harmless jit trace warning on TensorBoard add_graph call. Also fix multiple add_graph() calls bug, now only on batch 0.          * Update train.py          * Update MixUp augmentation `alpha=beta=32.0` (#3455)          Per VOC empirical results https://github.com/ultralytics/yolov5/issues/3380#issuecomment-853001307 by @developer0hye          * Add `timeout()` class (#3460)          * Add `timeout()` class          * rearrange order          * Faster HSV augmentation (#3462)          remove datatype conversion process that can be skipped          * Add `check_git_status()` 5 second timeout (#3464)          * Add check_git_status() 5 second timeout          This should prevent the SSH Git bug that we were discussing @KalenMike          * cleanup          * replace timeout with check_output built-in timeout          * Improved `check_requirements()` offline-handling (#3466)          Improve robustness of `check_requirements()` function to offline environments (do not attempt pip installs when offline).          * Add `output_names` argument for ONNX export with dynamic axes (#3456)          * Add output names & dynamic axes for onnx export          Add output_names and dynamic_axes names for all outputs in torch.onnx.export. The first four outputs of the model will have names output0, output1, output2, output3          * use first output only + cleanup          Co-authored-by: Samridha Shrestha <samridha.shrestha@g42.ai>     Co-authored-by: Glenn Jocher <glenn.jocher@ultralytics.com>          * Revert FP16 `test.py` and `detect.py` inference to FP32 default (#3423)          * fixed inference bug ,while use half precision          * replace --use-half with --half          * replace space and PEP8 in detect.py          * PEP8 detect.py          * update --half help comment          * Update test.py          * revert space          Co-authored-by: Glenn Jocher <glenn.jocher@ultralytics.com>          * Add additional links/resources to stale.yml message (#3467)          * Update stale.yml          * cleanup          * Update stale.yml          * reformat          * Update stale.yml HUB URL (#3468)          * Stale `github.actor` bug fix (#3483)          * Explicit `model.eval()` call `if opt.train=False` (#3475)          * call model.eval() when opt.train is False          call model.eval() when opt.train is False          * single-line if statement          * cleanup          Co-authored-by: Glenn Jocher <glenn.jocher@ultralytics.com>          * check_requirements() exclude `opencv-python` (#3495)          Fix for 3rd party or contrib versions of installed OpenCV as in https://github.com/ultralytics/yolov5/issues/3494.          * Earlier `assert` for cpu and half option (#3508)          * early assert for cpu and half option          early assert for cpu and half option          * Modified comment          Modified comment          * Update tutorial.ipynb (#3510)          * Reduce test.py results spacing (#3511)          * Update README.md (#3512)          * Update README.md          Minor modifications          * 850 width          * Update greetings.yml          revert greeting change as PRs will now merge to master.          Co-authored-by: Piotr Skalski <SkalskiP@users.noreply.github.com>     Co-authored-by: SkalskiP <piotr.skalski92@gmail.com>     Co-authored-by: Peretz Cohen <pizzaz93@users.noreply.github.com>     Co-authored-by: tudoulei <34886368+tudoulei@users.noreply.github.com>     Co-authored-by: chocosaj <chocosaj@users.noreply.github.com>     Co-authored-by: BuildTools <unconfigured@null.spigotmc.org>     Co-authored-by: Yonghye Kwon <developer.0hye@gmail.com>     Co-authored-by: Sam_S <SamSamhuns@users.noreply.github.com>     Co-authored-by: Samridha Shrestha <samridha.shrestha@g42.ai>     Co-authored-by: edificewang <609552430@qq.com> 
       # Load PyTorch model      device = select_device(opt.device)     assert not (opt.device.lower() == 'cpu' and opt.half), '--half only compatible with GPU export, i.e. use --device 0'      model = attempt_load(opt.weights, map_location=device)  # load FP32 model      labels = model.names       # Checks     # Input      gs = int(max(model.stride))  # grid size (max stride)      opt.img_size = [check_img_size(x, gs) for x in opt.img_size]  # verify img_size are gs-multiples     assert not (opt.device.lower() == 'cpu' and opt.half), '--half only compatible with GPU export, i.e. use --device 0'      # Input      img = torch.zeros(opt.batch_size, 3, *opt.img_size).to(device)  # image size(1,3,320,192) iDetection        # Update model      if opt.half:          img, model = img.half(), model.half()  # to FP16     if opt.train:         model.train()  # training mode (no grid construction in Detect layer)     model.train() if opt.train else model.eval()  # training mode = no Detect() layer grid construction      for k, m in model.named_modules():          m._non_persistent_buffers_set = set()  # pytorch 1.6.0 compatibility          if isinstance(m, models.common.Conv):  # assign export-friendly activations 
