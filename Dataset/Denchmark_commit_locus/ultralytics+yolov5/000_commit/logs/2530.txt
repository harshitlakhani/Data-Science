      Explicit Imports (#498)          * expand imports          * optimize          * miss          * fix 
         # Disable gradients          with torch.no_grad():              # Run model             t = torch_utils.time_synchronized()             t = time_synchronized()              inf_out, train_out = model(img, augment=augment)  # inference and training outputs             t0 += torch_utils.time_synchronized() - t             t0 += time_synchronized() - t                # Compute loss              if training:  # if model has loss hyperparameters                  loss += compute_loss([x.float() for x in train_out], targets, model)[1][:3]  # GIoU, obj, cls                # Run NMS             t = torch_utils.time_synchronized()             t = time_synchronized()              output = non_max_suppression(inf_out, conf_thres=conf_thres, iou_thres=iou_thres, merge=merge)             t1 += torch_utils.time_synchronized() - t             t1 += time_synchronized() - t            # Statistics per image          for si, pred in enumerate(output): 
