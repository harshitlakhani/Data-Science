      Github release assets model autodownload (#711)          * assets autodownload          * Update google_utils.py          * Update google_utils.py          * Update google_utils.py          * Update google_utils.py          * Update google_utils.py          Co-authored-by: Glenn Jocher <glenn.jocher@ultralytics.com> 
 import platform  import time  from pathlib import Path import torch      def attempt_download(weights):      # Attempt to download pretrained weights if not found locally      weights = weights.strip().replace("'", '')     msg = weights + ' missing, try downloading from https://drive.google.com/drive/folders/1Drs_Aiu7xx6S-ix95f9kNsA6ueKRpN2J'      r = 1  # return     if len(weights) > 0 and not os.path.isfile(weights):         d = {'yolov3-spp.pt': '1mM67oNw4fZoIOL1c8M3hHmj66d8e-ni_',  # yolov3-spp.yaml              'yolov5s.pt': '1R5T6rIyy3lLwgFXNms8whc-387H0tMQO',  # yolov5s.yaml              'yolov5m.pt': '1vobuEExpWQVpXExsJ2w-Mbf3HJjWkQJr',  # yolov5m.yaml              'yolov5l.pt': '1hrlqD1Wdei7UT4OgT785BEk1JwnSvNEV',  # yolov5l.yaml              'yolov5x.pt': '1mM8aZJlWTxOg7BZJvNUMrTnA2AbeCVzS',  # yolov5x.yaml              }          file = Path(weights).name         if file in d:             r = gdrive_download(id=d[file], name=weights)          if not (r == 0 and os.path.exists(weights) and os.path.getsize(weights) > 1E6):  # weights exist and > 1MB             os.remove(weights) if os.path.exists(weights) else None  # remove partial downloads             s = 'curl -L -o %s "storage.googleapis.com/ultralytics/yolov5/ckpt/%s"' % (weights, file)             r = os.system(s)  # execute, capture return values              # Error check             if not (r == 0 and os.path.exists(weights) and os.path.getsize(weights) > 1E6):  # weights exist and > 1MB     file = Path(weights).name      msg = weights + ' missing, try downloading from https://github.com/ultralytics/yolov5/releases/'     models = ['yolov5s.pt', 'yolov5m.pt', 'yolov5l.pt', 'yolov5x.pt']  # available models      if file in models and not os.path.isfile(weights):         # Google Drive         # d = {'yolov5s.pt': '1R5T6rIyy3lLwgFXNms8whc-387H0tMQO',         #      'yolov5m.pt': '1vobuEExpWQVpXExsJ2w-Mbf3HJjWkQJr',         #      'yolov5l.pt': '1hrlqD1Wdei7UT4OgT785BEk1JwnSvNEV',         #      'yolov5x.pt': '1mM8aZJlWTxOg7BZJvNUMrTnA2AbeCVzS'}         # r = gdrive_download(id=d[file], name=weights) if file in d else 1         # if r == 0 and os.path.exists(weights) and os.path.getsize(weights) > 1E6:  # check         #    return          try:  # GitHub             url = 'https://github.com/ultralytics/yolov5/releases/download/v2.0/' + file             print('Downloading %s to %s...' % (url, weights))             if platform.system() == 'Darwin':  # avoid MacOS python requests certificate error                 r = os.system('curl -L %s -o %s' % (url, weights))             else:                 torch.hub.download_url_to_file(url, weights)             assert os.path.exists(weights) and os.path.getsize(weights) > 1E6  # check         except Exception as e:  # GCP             print('Download error: %s' % e)             url = 'https://storage.googleapis.com/ultralytics/yolov5/ckpt/' + file             print('Downloading %s to %s...' % (url, weights))             r = os.system('curl -L %s -o %s' % (url, weights))  # torch.hub.download_url_to_file(url, weights)         finally:             if not (os.path.exists(weights) and os.path.getsize(weights) > 1E6):  # check                  os.remove(weights) if os.path.exists(weights) else None  # remove partial downloads                 raise Exception(msg)                 print('ERROR: Download failure: %s' % msg)             print('')             return      def gdrive_download(id='1n_oKgR81BJtqk75b00eAjdv03qVCQn2f', name='coco128.zip'):     # Downloads a file from Google Drive, accepting presented query     # from utils.google_utils import *; gdrive_download()     # Downloads a file from Google Drive. from utils.google_utils import *; gdrive_download()      t = time.time()        print('Downloading https://drive.google.com/uc?export=download&id=%s as %s... ' % (id, name), end='') 
