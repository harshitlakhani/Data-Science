      Merge branch 'master' into advanced_logging 
      model.hyp = hyp  # attach hyperparameters to model       model.gr = 1.0  # giou loss ratio (obj_loss = 1.0 or giou)       model.class_weights = labels_to_class_weights(dataset.labels, nc).to(device)  # attach class weights      model.names = data_dict['names']     +    #save hyperparamter and training options in run folder  +    with open(os.path.join(log_dir, 'hyp.yaml'), 'w') as f:  +        yaml.dump(hyp, f, sort_keys=False)  +  +    with open(os.path.join(log_dir, 'opt.yaml'), 'w') as f:  +        yaml.dump(vars(opt), f, sort_keys=False)  +           # Class frequency       labels = np.concatenate(dataset.labels, 0)       c = torch.tensor(labels[:, 0])  # classes 
