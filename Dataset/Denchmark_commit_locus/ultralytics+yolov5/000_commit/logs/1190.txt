      module updates 
         self.cv4 = Conv(2 * c_, c2, 1, 1)          self.bn = nn.BatchNorm2d(2 * c_)  # applied to cat(cv2, cv3)          self.act = nn.LeakyReLU(0.1, inplace=True)         self.m = nn.Sequential(*[CrossConv(c_, c_, shortcut, g, e=1.0) for _ in range(n)])         self.m = nn.Sequential(*[CrossConv(c_, c_, 3, 1, g, 1.0, shortcut) for _ in range(n)])        def forward(self, x):          y1 = self.cv3(self.m(self.cv1(x))) 
