      EMA and non_blocking=True 
     loss = torch.zeros(3, device=device)      jdict, stats, ap, ap_class = [], [], [], []      for batch_i, (img, targets, paths, shapes) in enumerate(tqdm(dataloader, desc=s)):         img = img.to(device)         img = img.to(device, non_blocking=True)          img = img.half() if half else img.float()  # uint8 to fp16/32          img /= 255.0  # 0 - 255 to 0.0 - 1.0          targets = targets.to(device) 
