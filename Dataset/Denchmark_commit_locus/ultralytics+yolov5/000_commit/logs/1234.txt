      YOLOv5 v4.0 Release (#1837)          * Update C3 module          * Update C3 module          * Update C3 module          * Update C3 module          * update          * update          * update          * update          * update          * update          * update          * update          * update          * updates          * updates          * updates          * updates          * updates          * updates          * updates          * updates          * updates          * updates          * update          * update          * update          * update          * updates          * updates          * updates          * updates          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update datasets          * update          * update          * update          * update attempt_downlaod()          * merge          * merge          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * parameterize eps          * comments          * gs-multiple          * update          * max_nms implemented          * Create one_cycle() function          * update          * update          * update          * update          * update          * update          * update          * update study.png          * update study.png          * Update datasets.py 
     def __init__(self, c1, c2, k=1, s=1, p=None, g=1, act=True):  # ch_in, ch_out, kernel, stride, padding, groups          super(Focus, self).__init__()          self.conv = Conv(c1 * 4, c2, k, s, p, g, act)         # self.contract = Contract(gain=2)        def forward(self, x):  # x(b,c,w,h) -> y(b,4c,w/2,h/2)          return self.conv(torch.cat([x[..., ::2, ::2], x[..., 1::2, ::2], x[..., ::2, 1::2], x[..., 1::2, 1::2]], 1))         # return self.conv(self.contract(x))   class Contract(nn.Module):     # Contract width-height into channels, i.e. x(1,64,80,80) to x(1,256,40,40)     def __init__(self, gain=2):         super().__init__()         self.gain = gain      def forward(self, x):         N, C, H, W = x.size()  # assert (H / s == 0) and (W / s == 0), 'Indivisible gain'         s = self.gain         x = x.view(N, C, H // s, s, W // s, s)  # x(1,64,40,2,40,2)         x = x.permute(0, 3, 5, 1, 2, 4).contiguous()  # x(1,2,2,64,40,40)         return x.view(N, C * s * s, H // s, W // s)  # x(1,256,40,40)   class Expand(nn.Module):     # Expand channels into width-height, i.e. x(1,64,80,80) to x(1,16,160,160)     def __init__(self, gain=2):         super().__init__()         self.gain = gain      def forward(self, x):         N, C, H, W = x.size()  # assert C / s ** 2 == 0, 'Indivisible gain'         s = self.gain         x = x.view(N, s, s, C // s ** 2, H, W)  # x(1,2,2,16,80,80)         x = x.permute(0, 3, 4, 1, 5, 2).contiguous()  # x(1,16,80,2,80,2)         return x.view(N, C // s ** 2, H * s, W * s)  # x(1,16,160,160)      class Concat(nn.Module): 
