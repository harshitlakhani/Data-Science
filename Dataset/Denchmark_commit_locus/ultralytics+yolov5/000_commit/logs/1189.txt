      module updates 
     class CrossConv(nn.Module):     # Cross Convolution     def __init__(self, c1, c2, shortcut=True, g=1, e=0.5):  # ch_in, ch_out, shortcut, groups, expansion     # Cross Convolution Downsample     def __init__(self, c1, c2, k=3, s=1, g=1, e=1.0, shortcut=False):         # ch_in, ch_out, kernel, stride, groups, expansion, shortcut          super(CrossConv, self).__init__()          c_ = int(c2 * e)  # hidden channels         self.cv1 = Conv(c1, c_, (1, 3), 1)         self.cv2 = Conv(c_, c2, (3, 1), 1, g=g)         self.cv1 = Conv(c1, c_, (1, k), (1, s))         self.cv2 = Conv(c_, c2, (k, 1), (s, 1), g=g)          self.add = shortcut and c1 == c2        def forward(self, x): 
