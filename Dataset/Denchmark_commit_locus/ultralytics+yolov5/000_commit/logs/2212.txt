      Update test.py --task speed and study (#2099)          * Add --speed benchmark          * test range 256 - 1536          * update          * update          * update          * update 
              save_conf=opt.save_conf,               )       elif opt.task == 'speed':  # speed benchmarks         for w in opt.weights:             test(opt.data, w, opt.batch_size, opt.img_size, 0.25, 0.45, save_json=False, plots=False)       elif opt.task == 'study':  # run over a range of settings and save/plot         for weights in ['yolov5s.pt', 'yolov5m.pt', 'yolov5l.pt', 'yolov5x.pt']:             f = 'study_%s_%s.txt' % (Path(opt.data).stem, Path(weights).stem)  # filename to save to             x = list(range(320, 800, 64))  # x axis         x = list(range(256, 1536 + 128, 128))  # x axis (image sizes)         for w in opt.weights:             f = f'study_{Path(opt.data).stem}_{Path(w).stem}.txt'  # filename to save to              y = []  # y axis              for i in x:  # img-size                 print('\nRunning %s point %s...' % (f, i))                 r, _, t = test(opt.data, weights, opt.batch_size, i, opt.conf_thres, opt.iou_thres, opt.save_json,                 print(f'\nRunning {f} point {i}...')                 r, _, t = test(opt.data, w, opt.batch_size, i, opt.conf_thres, opt.iou_thres, opt.save_json,                                 plots=False)                  y.append(r + t)  # results and times              np.savetxt(f, y, fmt='%10.4g')  # save          os.system('zip -r study.zip study_*.txt')         plot_study_txt(f, x)  # plot         plot_study_txt(x=x)  # plot 
