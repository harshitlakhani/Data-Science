      YOLOv5 AWS Inferentia Inplace compatibility updates (#2953)          * Added flag to enable/disable all inplace and assignment operations          * Removed shape print statements          * Scope Detect/Model import to avoid circular dependency          * PEP8          * create _descale_pred()          * replace lost space          * replace list with tuple          Co-authored-by: Glenn Jocher <glenn.jocher@ultralytics.com> 
             logger.info('%.1fms total' % sum(dt))          return x       def _descale_pred(self, p, flips, scale, img_size):         # de-scale predictions following augmented inference (inverse operation)         if self.inplace:             p[..., :4] /= scale  # de-scale             if flips == 2:                 p[..., 1] = img_size[0] - p[..., 1]  # de-flip ud             elif flips == 3:                 p[..., 0] = img_size[1] - p[..., 0]  # de-flip lr         else:             x, y, wh = p[..., 0:1] / scale, p[..., 1:2] / scale, p[..., 2:4] / scale  # de-scale             if flips == 2:                 y = img_size[0] - y  # de-flip ud             elif flips == 3:                 x = img_size[1] - x  # de-flip lr             p = torch.cat((x, y, wh, p[..., 4:]), -1)         return p       def _initialize_biases(self, cf=None):  # initialize biases into Detect(), cf is class frequency          # https://arxiv.org/abs/1708.02002 section 3.3          # cf = torch.bincount(torch.tensor(np.concatenate(dataset.labels, 0)[:, 0]).long(), minlength=nc) + 1. 
