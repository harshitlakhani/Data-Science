      Refactor test.py arguments (#3558)          * remove opt from test()          * pass kwargs          * update comments          * revert accidental default change          * multiple --img options          * add comments 
     parser.add_argument('--half', action='store_true', help='use FP16 half-precision inference')      opt = parser.parse_args()      opt.save_json |= opt.data.endswith('coco.yaml')     opt.save_txt |= opt.save_hybrid      opt.data = check_file(opt.data)  # check file      print(opt)      check_requirements(exclude=('tensorboard', 'thop'))        if opt.task in ('train', 'val', 'test'):  # run normally         test(opt.data,              opt.weights,              opt.batch_size,              opt.img_size,              opt.conf_thres,              opt.iou_thres,              opt.save_json,              opt.single_cls,              opt.augment,              opt.verbose,              save_txt=opt.save_txt | opt.save_hybrid,              save_hybrid=opt.save_hybrid,              save_conf=opt.save_conf,              half=opt.half,              opt=opt              )         test(**vars(opt))        elif opt.task == 'speed':  # speed benchmarks          for w in opt.weights if isinstance(opt.weights, list) else [opt.weights]:             test(opt.data, w, opt.batch_size, opt.img_size, 0.25, 0.45, save_json=False, plots=False, opt=opt)             test(opt.data, w, opt.batch_size, opt.imgsz, 0.25, 0.45, save_json=False, plots=False)        elif opt.task == 'study':  # run over a range of settings and save/plot          # python test.py --task study --data coco.yaml --iou 0.7 --weights yolov5s.pt yolov5m.pt yolov5l.pt yolov5x.pt 
