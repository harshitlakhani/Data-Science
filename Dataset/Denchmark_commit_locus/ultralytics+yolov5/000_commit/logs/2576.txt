      remove NBSP 
     def _initialize_biases(self, cf=None):  # initialize biases into Detect(), cf is class frequency          # cf = torch.bincount(torch.tensor(np.concatenate(dataset.labels, 0)[:, 0]).long(), minlength=nc) + 1.          m = self.model[-1]  # Detect() module         for mi, s in zip(m.m, m.stride):  # í˜»from         for mi, s in zip(m.m, m.stride):  # from              b = mi.bias.view(m.na, -1)  # conv.bias(255) to (3,85)              b[:, 4] += math.log(8 / (640 / s) ** 2)  # obj (8 objects per 640 image)              b[:, 5:] += math.log(0.6 / (m.nc - 0.99)) if cf is None else torch.log(cf / cf.sum())  # cls 
