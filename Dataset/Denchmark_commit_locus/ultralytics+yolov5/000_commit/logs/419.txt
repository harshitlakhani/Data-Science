      Update 4 main ops for paths and .run() (#3715)          * Add yolov5/ to path          * rename functions to run()          * cleanup          * rename fix          * CI fix          * cleanup find models/export.py 
     @torch.no_grad() def detect(weights='yolov5s.pt',  # model.pt path(s)            source='data/images',  # file/dir/URL/glob, 0 for webcam            imgsz=640,  # inference size (pixels)            conf_thres=0.25,  # confidence threshold            iou_thres=0.45,  # NMS IOU threshold            max_det=1000,  # maximum detections per image            device='',  # cuda device, i.e. 0 or 0,1,2,3 or cpu            view_img=False,  # show results            save_txt=False,  # save results to *.txt            save_conf=False,  # save confidences in --save-txt labels            save_crop=False,  # save cropped prediction boxes            nosave=False,  # do not save images/videos            classes=None,  # filter by class: --class 0, or --class 0 2 3            agnostic_nms=False,  # class-agnostic NMS            augment=False,  # augmented inference            update=False,  # update all models            project='runs/detect',  # save results to project/name            name='exp',  # save results to project/name            exist_ok=False,  # existing project/name ok, do not increment            line_thickness=3,  # bounding box thickness (pixels)            hide_labels=False,  # hide labels            hide_conf=False,  # hide confidences            half=False,  # use FP16 half-precision inference            ): def run(weights='yolov5s.pt',  # model.pt path(s)         source='data/images',  # file/dir/URL/glob, 0 for webcam         imgsz=640,  # inference size (pixels)         conf_thres=0.25,  # confidence threshold         iou_thres=0.45,  # NMS IOU threshold         max_det=1000,  # maximum detections per image         device='',  # cuda device, i.e. 0 or 0,1,2,3 or cpu         view_img=False,  # show results         save_txt=False,  # save results to *.txt         save_conf=False,  # save confidences in --save-txt labels         save_crop=False,  # save cropped prediction boxes         nosave=False,  # do not save images/videos         classes=None,  # filter by class: --class 0, or --class 0 2 3         agnostic_nms=False,  # class-agnostic NMS         augment=False,  # augmented inference         update=False,  # update all models         project='runs/detect',  # save results to project/name         name='exp',  # save results to project/name         exist_ok=False,  # existing project/name ok, do not increment         line_thickness=3,  # bounding box thickness (pixels)         hide_labels=False,  # hide labels         hide_conf=False,  # hide confidences         half=False,  # use FP16 half-precision inference         ):      save_img = not nosave and not source.endswith('.txt')  # save inference images      webcam = source.isnumeric() or source.endswith('.txt') or source.lower().startswith(          ('rtsp://', 'rtmp://', 'http://', 'https://')) 
