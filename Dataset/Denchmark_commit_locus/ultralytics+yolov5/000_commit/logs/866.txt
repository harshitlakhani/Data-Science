      Increment train, test, detect runs/ (#1322)          * Increment train, test, detect runs/          * Update ci-testing.yml          * inference/images to data/images          * move images          * runs/exp to runs/train/exp          * update 'results saved to %s' str 
 if __name__ == '__main__':      parser = argparse.ArgumentParser()      parser.add_argument('--weights', nargs='+', type=str, default='yolov5s.pt', help='model.pt path(s)')     parser.add_argument('--source', type=str, default='inference/images', help='source')  # file/folder, 0 for webcam     parser.add_argument('--source', type=str, default='data/images', help='source')  # file/folder, 0 for webcam      parser.add_argument('--img-size', type=int, default=640, help='inference size (pixels)')      parser.add_argument('--conf-thres', type=float, default=0.25, help='object confidence threshold')      parser.add_argument('--iou-thres', type=float, default=0.45, help='IOU threshold for NMS')      parser.add_argument('--device', default='', help='cuda device, i.e. 0 or 0,1,2,3 or cpu')      parser.add_argument('--view-img', action='store_true', help='display results')     parser.add_argument('--save-txt', action='store_true', help='save results to *.txt')     parser.add_argument('--save-txt', action='store_false', help='save results to *.txt')      parser.add_argument('--save-conf', action='store_true', help='save confidences in --save-txt labels')     parser.add_argument('--save-dir', type=str, default='inference/output', help='directory to save results')     parser.add_argument('--save-dir', type=str, default='runs/detect', help='directory to save results')     parser.add_argument('--name', default='', help='name to append to --save-dir: i.e. runs/{N} -> runs/{N}_{name}')      parser.add_argument('--classes', nargs='+', type=int, help='filter by class: --class 0, or --class 0 2 3')      parser.add_argument('--agnostic-nms', action='store_true', help='class-agnostic NMS')      parser.add_argument('--augment', action='store_true', help='augmented inference') 
