      Update PR curve (#1428)          * Update PR curve          * legend outside          * list(Path().glob()) 
         ap = np.sum((mrec[i + 1] - mrec[i]) * mpre[i + 1])  # area under curve        return ap, mpre, mrec   def plot_pr_curve(px, py, ap, save_dir='.', names=()):     fig, ax = plt.subplots(1, 1, figsize=(9, 6))     py = np.stack(py, axis=1)      if 0 < len(names) < 21:  # show mAP in legend if < 10 classes         for i, y in enumerate(py.T):             ax.plot(px, y, linewidth=1, label=f'{names[i]} %.3f' % ap[i, 0])  # plot(recall, precision)     else:         ax.plot(px, py, linewidth=1, color='grey')  # plot(recall, precision)      ax.plot(px, py.mean(1), linewidth=3, color='blue', label='all classes %.3f mAP@0.5' % ap[:, 0].mean())     ax.set_xlabel('Recall')     ax.set_ylabel('Precision')     ax.set_xlim(0, 1)     ax.set_ylim(0, 1)     plt.legend(bbox_to_anchor=(1.04, 1), loc="upper left")     fig.tight_layout()     fig.savefig(Path(save_dir) / 'precision_recall_curve.png', dpi=250) 
