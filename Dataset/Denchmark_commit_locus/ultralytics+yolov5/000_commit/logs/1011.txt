      Label caching foundational re-write #306 
                 ne += 1  # print('empty labels for image %s' % self.img_files[i])  # file empty                  # os.system("rm '%s' '%s'" % (self.img_files[i], self.label_files[i]))  # remove               pbar.desc = 'Caching labels %s (%g found, %g missing, %g empty, %g duplicate, for %g images)' % (                 s, nf, nm, ne, nd, n)         assert nf > 0 or n == 20288, 'No labels found in %s. See %s' % (os.path.dirname(file) + os.sep, help_url)         if not labels_loaded and n > 1000:             print('Saving labels to %s for faster future loading' % np_labels_path)             np.save(np_labels_path, self.labels)  # save for next time             pbar.desc = 'Scanning labels %s (%g found, %g missing, %g empty, %g duplicate, for %g images)' % (                 cache_path, nf, nm, ne, nd, n)         assert nf > 0, 'No labels found in %s. See %s' % (os.path.dirname(file) + os.sep, help_url)            # Cache images into memory for faster training (WARNING: large datasets may exceed system RAM)         if cache_images:  # if training         self.imgs = [None] * n         if cache_images:              gb = 0  # Gigabytes of cached images              pbar = tqdm(range(len(self.img_files)), desc='Caching images')              self.img_hw0, self.img_hw = [None] * n, [None] * n 
