      `plot_one_box()` default `color=(128, 128, 128)` (#3240)          * Color can be none by default          * `plot_one_box()` default `color=(128, 128, 128)`          Co-authored-by: Glenn Jocher <glenn.jocher@ultralytics.com> 
         cv2.putText(im, label, (c1[0], c1[1] - 2), 0, tl / 3, [225, 255, 255], thickness=tf, lineType=cv2.LINE_AA)     def plot_one_box_PIL(box, im, color=None, label=None, line_thickness=None): def plot_one_box_PIL(box, im, color=(128, 128, 128), label=None, line_thickness=None):      # Plots one bounding box on image 'im' using PIL      im = Image.fromarray(im)      draw = ImageDraw.Draw(im)      line_thickness = line_thickness or max(int(min(im.size) / 200), 2)     draw.rectangle(box, width=line_thickness, outline=tuple(color))  # plot     draw.rectangle(box, width=line_thickness, outline=color)  # plot      if label:         fontsize = max(round(max(im.size) / 40), 12)         font = ImageFont.truetype("Arial.ttf", fontsize)         font = ImageFont.truetype("Arial.ttf", size=max(round(max(im.size) / 40), 12))          txt_width, txt_height = font.getsize(label)         draw.rectangle([box[0], box[1] - txt_height + 4, box[0] + txt_width, box[1]], fill=tuple(color))         draw.rectangle([box[0], box[1] - txt_height + 4, box[0] + txt_width, box[1]], fill=color)          draw.text((box[0], box[1] - txt_height + 1), label, fill=(255, 255, 255), font=font)      return np.asarray(im)   
