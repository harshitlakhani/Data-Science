      Update caching (#1496) 
             fps = cap.get(cv2.CAP_PROP_FPS) % 100              _, self.imgs[i] = cap.read()  # guarantee first frame              thread = Thread(target=self.update, args=([i, cap]), daemon=True)             logger.debug(' success (%gx%g at %.2f FPS).', w, h, fps)             print(' success (%gx%g at %.2f FPS).' % (w, h, fps))              thread.start()         print('')  # newline            # check for common shapes          s = np.stack([letterbox(x, new_shape=self.img_size)[0].shape for x in self.imgs], 0)  # inference shapes          self.rect = np.unique(s, axis=0).shape[0] == 1  # rect inference if all shapes equal          if not self.rect:             logger.warning('WARNING: Different stream shapes detected. For optimal performance supply similarly-shaped streams.')             print('WARNING: Different stream shapes detected. For optimal performance supply similarly-shaped streams.')        def update(self, index, cap):          # Read next stream frame in a daemon thread 
