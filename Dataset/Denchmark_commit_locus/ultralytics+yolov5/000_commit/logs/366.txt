      PyTorch Hub results.render() (#1897) 
                 for c in pred[:, -1].unique():                      n = (pred[:, -1] == c).sum()  # detections per class                      str += f'{n} {self.names[int(c)]}s, '  # add to string                 if show or save:                 if show or save or render:                      img = Image.fromarray(img.astype(np.uint8)) if isinstance(img, np.ndarray) else img  # from np                      for *box, conf, cls in pred:  # xyxy, confidence, class                          # str += '%s %.2f, ' % (names[int(cls)], conf)  # label                          ImageDraw.Draw(img).rectangle(box, width=4, outline=colors[int(cls) % 10])  # plot             if pprint:                 print(str)             if show:                 img.show(f'Image {i}')  # show              if save:                  f = f'results{i}.jpg'                  str += f"saved to '{f}'"                  img.save(f)  # save             if show:                 img.show(f'Image {i}')  # show             if pprint:                 print(str)             if render:                 self.imgs[i] = np.asarray(img)        def print(self):          self.display(pprint=True)  # print results 
