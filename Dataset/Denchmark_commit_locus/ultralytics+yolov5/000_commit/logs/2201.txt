      YOLOv5 Segmentation Dataloader Updates (#2188)          * Update C3 module          * Update C3 module          * Update C3 module          * Update C3 module          * update          * update          * update          * update          * update          * update          * update          * update          * update          * updates          * updates          * updates          * updates          * updates          * updates          * updates          * updates          * updates          * updates          * update          * update          * update          * update          * updates          * updates          * updates          * updates          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update datasets          * update          * update          * update          * update attempt_downlaod()          * merge          * merge          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * parameterize eps          * comments          * gs-multiple          * update          * max_nms implemented          * Create one_cycle() function          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * GitHub API rate limit fix          * update          * ComputeLoss          * ComputeLoss          * ComputeLoss          * ComputeLoss          * ComputeLoss          * ComputeLoss          * ComputeLoss          * ComputeLoss          * ComputeLoss          * ComputeLoss          * ComputeLoss          * astuple          * epochs          * update          * update          * ComputeLoss()          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * merge          * merge          * merge          * merge          * update          * update          * update          * update          * commit=tag == tags[-1]          * Update cudnn.benchmark          * update          * update          * update          * updates          * updates          * updates          * updates          * updates          * updates          * updates          * update          * update          * update          * update          * update          * mosaic9          * update          * update          * update          * update          * update          * update          * institute cache versioning          * only display on existing cache          * reverse cache exists booleans 
         x1, y1, x2, y2 = [max(x, 0) for x in c]  # allocate coords            # Labels         labels = self.labels[index].copy()         labels, segments = self.labels[index].copy(), self.segments[index].copy()          if labels.size:              labels[:, 1:] = xywhn2xyxy(labels[:, 1:], w, h, padx, pady)  # normalized xywh to pixel xyxy format             segments = [xyn2xy(x, w, h, padx, pady) for x in segments]          labels9.append(labels)         segments9.extend(segments)            # Image          img9[y1:y2, x1:x2] = img[y1 - pady:, x1 - padx:]  # img9[ymin:ymax, xmin:xmax]          hp, wp = h, w  # height, width previous        # Offset     yc, xc = [int(random.uniform(0, s)) for x in self.mosaic_border]  # mosaic center x, y     yc, xc = [int(random.uniform(0, s)) for _ in self.mosaic_border]  # mosaic center x, y      img9 = img9[yc:yc + 2 * s, xc:xc + 2 * s]        # Concat/clip labels     if len(labels9):         labels9 = np.concatenate(labels9, 0)         labels9[:, [1, 3]] -= xc         labels9[:, [2, 4]] -= yc     labels9 = np.concatenate(labels9, 0)     labels9[:, [1, 3]] -= xc     labels9[:, [2, 4]] -= yc     c = np.array([xc, yc])  # centers     segments9 = [x - c for x in segments9]           np.clip(labels9[:, 1:], 0, 2 * s, out=labels9[:, 1:])  # use with random_perspective         # img9, labels9 = replicate(img9, labels9)  # replicate     for x in (labels9[:, 1:], *segments9):         np.clip(x, 0, 2 * s, out=x)  # clip when using random_perspective()     # img9, labels9 = replicate(img9, labels9)  # replicate        # Augment     img9, labels9 = random_perspective(img9, labels9,     img9, labels9 = random_perspective(img9, labels9, segments9,                                         degrees=self.hyp['degrees'],                                         translate=self.hyp['translate'],                                         scale=self.hyp['scale'], 
