      Weights & Biases (W&B) Feature Addition (#1235)          * Add wandb metric logging and bounding box debugging          * Improve formatting, readability          * Remove mutliple path for init, improve formatting          * Add wandb params          * Remove typecasting in bbox coordinates and reformat          * Cleanup          * add wandb to requirements.txt          * minor updates to test.py          * general reorg          * reduce --log-imgs to 10          * clean wandb import          * reverse wandb import assert          * add except AssertionError to try import          * move wandb init to all global ranks          * replace print() with logger.info()          * replace print() with logger.info()          * move wandb.init() bug fix          * project PosixPath to basename bug fix          Co-authored-by: Glenn Jocher <glenn.jocher@ultralytics.com> 
             if len(opt.name) and opt.bucket:                  os.system('gsutil cp %s gs://%s/results/results%s.txt' % (results_file, opt.bucket, opt.name))               # Tensorboard             if tb_writer:                 tags = ['train/box_loss', 'train/obj_loss', 'train/cls_loss',  # train loss                         'metrics/precision', 'metrics/recall', 'metrics/mAP_0.5', 'metrics/mAP_0.5:0.95',                         'val/box_loss', 'val/obj_loss', 'val/cls_loss',  # val loss                         'x/lr0', 'x/lr1', 'x/lr2']  # params                 for x, tag in zip(list(mloss[:-1]) + list(results) + lr, tags):                     tb_writer.add_scalar(tag, x, epoch)             # Log             tags = ['train/giou_loss', 'train/obj_loss', 'train/cls_loss',  # train loss                     'metrics/precision', 'metrics/recall', 'metrics/mAP_0.5', 'metrics/mAP_0.5:0.95',                     'val/giou_loss', 'val/obj_loss', 'val/cls_loss',  # val loss                     'x/lr0', 'x/lr1', 'x/lr2']  # params             for x, tag in zip(list(mloss[:-1]) + list(results) + lr, tags):                 if tb_writer:                     tb_writer.add_scalar(tag, x, epoch)  # tensorboard                 if wandb:                     wandb.log({tag: x})  # W&B                # Update best mAP              fi = fitness(np.array(results).reshape(1, -1))  # weighted combination of [P, R, mAP@.5, mAP@.5-.95] 
