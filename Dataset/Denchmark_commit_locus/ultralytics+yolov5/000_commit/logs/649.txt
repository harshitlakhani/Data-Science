      ONNX, BCEBlurWithLogitsLoss, plot_study updates 
     return 1.0 - 0.5 * eps, 0.5 * eps     class BCEBlurWithLogitsLoss(nn.Module):     # BCEwithLogitLoss() with reduced missing label effects.     def __init__(self, alpha=0.05):         super(BCEBlurWithLogitsLoss, self).__init__()         self.loss_fcn = nn.BCEWithLogitsLoss(reduction='none')  # must be nn.BCEWithLogitsLoss()         self.alpha = alpha      def forward(self, pred, true):         loss = self.loss_fcn(pred, true)         pred = torch.sigmoid(pred)  # prob from logits         dx = pred - true  # reduce only missing label effects         # dx = (pred - true).abs()  # reduce missing label and false label effects         alpha_factor = 1 - torch.exp((dx - 1) / (self.alpha + 1e-4))         loss *= alpha_factor         return loss.mean()    def compute_loss(p, targets, model):  # predictions, targets, model      ft = torch.cuda.FloatTensor if p[0].is_cuda else torch.Tensor      lcls, lbox, lobj = ft([0]), ft([0]), ft([0]) 
