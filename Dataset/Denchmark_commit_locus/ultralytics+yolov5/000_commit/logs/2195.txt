      YOLOv5 Segmentation Dataloader Updates (#2188)          * Update C3 module          * Update C3 module          * Update C3 module          * Update C3 module          * update          * update          * update          * update          * update          * update          * update          * update          * update          * updates          * updates          * updates          * updates          * updates          * updates          * updates          * updates          * updates          * updates          * update          * update          * update          * update          * updates          * updates          * updates          * updates          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update datasets          * update          * update          * update          * update attempt_downlaod()          * merge          * merge          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * parameterize eps          * comments          * gs-multiple          * update          * max_nms implemented          * Create one_cycle() function          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * GitHub API rate limit fix          * update          * ComputeLoss          * ComputeLoss          * ComputeLoss          * ComputeLoss          * ComputeLoss          * ComputeLoss          * ComputeLoss          * ComputeLoss          * ComputeLoss          * ComputeLoss          * ComputeLoss          * astuple          * epochs          * update          * update          * ComputeLoss()          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * merge          * merge          * merge          * merge          * update          * update          * update          * update          * commit=tag == tags[-1]          * Update cudnn.benchmark          * update          * update          * update          * updates          * updates          * updates          * updates          * updates          * updates          * updates          * update          * update          * update          * update          * update          * mosaic9          * update          * update          * update          * update          * update          * update          * institute cache versioning          * only display on existing cache          * reverse cache exists booleans 
                 if os.path.isfile(lb_file):                      nf += 1  # label found                      with open(lb_file, 'r') as f:                         l = np.array([x.split() for x in f.read().strip().splitlines()], dtype=np.float32)  # labels                         l = [x.split() for x in f.read().strip().splitlines()]                         if any([len(x) > 8 for x in l]):  # is segment                             classes = np.array([x[0] for x in l], dtype=np.float32)                             segments = [np.array(x[1:], dtype=np.float32).reshape(-1, 2) for x in l]  # (cls, xy1...)                             l = np.concatenate((classes.reshape(-1, 1), segments2boxes(segments)), 1)  # (cls, xywh)                         l = np.array(l, dtype=np.float32)                      if len(l):                          assert l.shape[1] == 5, 'labels require 5 columns each'                          assert (l >= 0).all(), 'negative labels' 
