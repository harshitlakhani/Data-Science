      YOLOv5 Segmentation Dataloader Updates (#2188)          * Update C3 module          * Update C3 module          * Update C3 module          * Update C3 module          * update          * update          * update          * update          * update          * update          * update          * update          * update          * updates          * updates          * updates          * updates          * updates          * updates          * updates          * updates          * updates          * updates          * update          * update          * update          * update          * updates          * updates          * updates          * updates          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update datasets          * update          * update          * update          * update attempt_downlaod()          * merge          * merge          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * parameterize eps          * comments          * gs-multiple          * update          * max_nms implemented          * Create one_cycle() function          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * GitHub API rate limit fix          * update          * ComputeLoss          * ComputeLoss          * ComputeLoss          * ComputeLoss          * ComputeLoss          * ComputeLoss          * ComputeLoss          * ComputeLoss          * ComputeLoss          * ComputeLoss          * ComputeLoss          * astuple          * epochs          * update          * update          * ComputeLoss()          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * update          * merge          * merge          * merge          * merge          * update          * update          * update          * update          * commit=tag == tags[-1]          * Update cudnn.benchmark          * update          * update          * update          * updates          * updates          * updates          * updates          * updates          * updates          * updates          * update          * update          * update          * update          * update          * mosaic9          * update          * update          * update          * update          * update          * update          * institute cache versioning          * only display on existing cache          * reverse cache exists booleans 
     return y     def xyn2xy(x, w=640, h=640, padw=0, padh=0):     # Convert normalized segments into pixel segments, shape (n,2)     y = x.clone() if isinstance(x, torch.Tensor) else np.copy(x)     y[:, 0] = w * x[:, 0] + padw  # top left x     y[:, 1] = h * x[:, 1] + padh  # top left y     return y   def segment2box(segment, width=640, height=640):     # Convert 1 segment label to 1 box label, applying inside-image constraint, i.e. (xy1, xy2, ...) to (xyxy)     x, y = segment.T  # segment xy     inside = (x >= 0) & (y >= 0) & (x <= width) & (y <= height)     x, y, = x[inside], y[inside]     return np.array([x.min(), y.min(), x.max(), y.max()]) if any(x) else np.zeros((1, 4))  # cls, xyxy   def segments2boxes(segments):     # Convert segment labels to box labels, i.e. (cls, xy1, xy2, ...) to (cls, xywh)     boxes = []     for s in segments:         x, y = s.T  # segment xy         boxes.append([x.min(), y.min(), x.max(), y.max()])  # cls, xyxy     return xyxy2xywh(np.array(boxes))  # cls, xywh   def resample_segments(segments, n=1000):     # Up-sample an (n,2) segment     for i, s in enumerate(segments):         x = np.linspace(0, len(s) - 1, n)         xp = np.arange(len(s))         segments[i] = np.concatenate([np.interp(x, xp, s[:, i]) for i in range(2)]).reshape(2, -1).T  # segment xy     return segments    def scale_coords(img1_shape, coords, img0_shape, ratio_pad=None):      # Rescale coords (xyxy) from img1_shape to img0_shape      if ratio_pad is None:  # calculate from img0_shape 
